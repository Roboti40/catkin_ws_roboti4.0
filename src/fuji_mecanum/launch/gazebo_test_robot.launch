<?xml version="1.0"?>

<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/willowgarage.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>


  <!-- robot urdf load -->
  <param name="robot_description"
    command="$(find xacro)/xacro '$(find fuji_mecanum)/test/test_robot.urdf.xacro' --inorder" />

  <node name="robot_state_publisher"
        pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />

  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find fuji_mecanum)/config/controller.yaml" />

  <!-- Spawn controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="joint_state_controller front_right_controller front_left_controller rear_right_controller rear_left_controller" />

  <!-- Spawn robot in gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
      args="-x -2.0 -y -2.0 -z 1.0
            -unpause
            -urdf
            -model robot
            -param robot_description" 
      respawn="false" 
      output="screen" />
      
  <!-- lancement du fichier python de controle du robot avec cmd_vel -->      
  <node pkg="fuji_mecanum" type="test_mecanum_robot.py" name="cmdVelCB"/>
  
  <!-- lancement du node de fusion des lidars --> 
    <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger">
    <param name="destination_frame" value="base_link"/>
    <param name="scan_destination_topic" value="/scan"/>
    <param name="laserscan_topics" value ="/lidar_front /lidar_rear" />
  </node>
  
  <!-- lancement du node odom --> 
  <node pkg="fuji_mecanum" type="remap_to_odom.py" name="model_states_to_odom" output="screen">
  <param name="model_name" value="robot"/>
  </node>


</launch>
